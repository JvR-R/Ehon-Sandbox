# Generated by Django 5.1.2 on 2024-10-18 00:24

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ActiveAlerts',
            fields=[
                ('alert_id', models.AutoField(primary_key=True, serialize=False)),
                ('uid', models.IntegerField()),
                ('alert_type', models.IntegerField()),
                ('message_id', models.IntegerField()),
                ('alert_timestamp', models.DateTimeField()),
                ('aa_active', models.IntegerField()),
            ],
            options={
                'db_table': 'active_alerts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AlarmsConfig',
            fields=[
                ('alarm_id', models.AutoField(primary_key=True, serialize=False)),
                ('client_id', models.IntegerField()),
                ('uid', models.IntegerField()),
                ('site_id', models.IntegerField(db_column='Site_id')),
                ('tank_id', models.IntegerField()),
                ('high_alarm', models.IntegerField()),
                ('low_alarm', models.IntegerField()),
                ('crithigh_alarm', models.IntegerField()),
                ('critlow_alarm', models.IntegerField()),
                ('alarm_enable', models.IntegerField()),
                ('relay1', models.IntegerField(blank=True, null=True)),
                ('relay2', models.IntegerField(blank=True, null=True)),
                ('relay3', models.IntegerField(blank=True, null=True)),
                ('relay4', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'alarms_config',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AppProduct',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'db_table': 'app_product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('client_id', models.AutoField(primary_key=True, serialize=False)),
                ('client_name', models.CharField(max_length=60, unique=True)),
                ('client_address', models.CharField(blank=True, max_length=255, null=True)),
                ('client_email', models.CharField(max_length=60)),
                ('client_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('mcs_clientid', models.FloatField(blank=True, null=True)),
                ('mcs_liteid', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Clients',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClientCard',
            fields=[
                ('card_id', models.IntegerField(primary_key=True, serialize=False)),
                ('card_name', models.CharField(max_length=30)),
                ('card_number', models.IntegerField()),
                ('card_type', models.IntegerField()),
                ('expire_date', models.DateField(blank=True, null=True)),
                ('pin_number', models.IntegerField(blank=True, null=True)),
                ('pin_change', models.IntegerField(blank=True, null=True)),
                ('prompt_vehicle', models.IntegerField(blank=True, null=True)),
                ('assist_number', models.IntegerField(blank=True, null=True)),
                ('prompt_driver', models.IntegerField(blank=True, null=True)),
                ('ad_info1', models.CharField(blank=True, max_length=80, null=True)),
                ('ad_info2', models.CharField(blank=True, max_length=80, null=True)),
                ('ad_info3', models.CharField(blank=True, max_length=80, null=True)),
                ('active', models.IntegerField()),
            ],
            options={
                'db_table': 'client_card',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClientSiteGroups',
            fields=[
                ('mapping_id', models.AutoField(primary_key=True, serialize=False)),
                ('group_id', models.IntegerField()),
                ('client_id', models.IntegerField()),
                ('site_no', models.IntegerField()),
                ('site_name', models.CharField(max_length=60)),
            ],
            options={
                'db_table': 'client_site_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClientsRecconciliation',
            fields=[
                ('idclients_recconciliation', models.AutoField(primary_key=True, serialize=False)),
                ('client_id', models.IntegerField()),
                ('uid', models.IntegerField()),
                ('site_id', models.IntegerField(db_column='Site_id')),
                ('tank_id', models.IntegerField(db_column='Tank_id')),
                ('opening_balance', models.DecimalField(blank=True, db_column='Opening_balance', decimal_places=2, max_digits=10, null=True)),
                ('closing_balance', models.DecimalField(blank=True, db_column='Closing_balance', decimal_places=2, max_digits=10, null=True)),
                ('total_transaction', models.IntegerField(blank=True, db_column='Total_transaction', null=True)),
                ('total_volume', models.DecimalField(blank=True, db_column='Total_volume', decimal_places=2, max_digits=10, null=True)),
                ('total_deliveries', models.DecimalField(blank=True, db_column='Total_Deliveries', decimal_places=2, max_digits=10, null=True)),
                ('delta', models.DecimalField(blank=True, db_column='Delta', decimal_places=2, max_digits=10, null=True)),
                ('reconciliation', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('reconciliation_flag', models.IntegerField(blank=True, null=True)),
                ('date', models.DateField(blank=True, db_column='Date', null=True)),
            ],
            options={
                'db_table': 'clients_recconciliation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClientTransaction',
            fields=[
                ('transaction_id', models.AutoField(primary_key=True, serialize=False)),
                ('piusi_transaction_id', models.IntegerField(blank=True, null=True)),
                ('piusi_id', models.IntegerField(blank=True, null=True)),
                ('transaction_date', models.DateField()),
                ('transaction_time', models.TimeField()),
                ('transaction_date_utc0', models.DateField(blank=True, null=True)),
                ('transaction_time_utc0', models.TimeField(blank=True, null=True)),
                ('card_number', models.CharField(max_length=60)),
                ('card_holder_name', models.CharField(blank=True, max_length=60, null=True)),
                ('customer_name', models.CharField(blank=True, max_length=60, null=True)),
                ('odometer', models.IntegerField(blank=True, null=True)),
                ('registration', models.CharField(max_length=11)),
                ('tank_id', models.IntegerField()),
                ('tank_name', models.CharField(blank=True, max_length=65, null=True)),
                ('site_id', models.IntegerField(blank=True, null=True)),
                ('pump_id', models.IntegerField()),
                ('dispensed_volume', models.FloatField()),
                ('actions', models.CharField(max_length=20)),
                ('product', models.CharField(blank=True, max_length=45, null=True)),
                ('mcs_transaction_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'client_transaction',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Console',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('device_id', models.CharField(blank=True, max_length=60, null=True, unique=True)),
                ('device_type', models.IntegerField()),
                ('man_data', models.DateField(blank=True, null=True)),
                ('console_status', models.CharField(max_length=30)),
                ('firmware', models.CharField(blank=True, max_length=45, null=True)),
                ('uart1', models.CharField(max_length=10)),
                ('uart1_id', models.CharField(max_length=15)),
                ('uart2', models.IntegerField()),
                ('uart3', models.IntegerField()),
                ('uart4', models.IntegerField()),
                ('uart5', models.IntegerField()),
                ('uart6', models.IntegerField()),
                ('can1', models.IntegerField()),
                ('fw_flag', models.IntegerField()),
                ('cfg_flag', models.IntegerField()),
                ('restart_flag', models.IntegerField()),
                ('logs_flag', models.IntegerField()),
                ('last_conndate', models.DateField(blank=True, null=True)),
                ('last_conntime', models.TimeField(blank=True, null=True)),
                ('console_ip', models.CharField(blank=True, max_length=45, null=True)),
                ('console_imei', models.CharField(blank=True, max_length=45, null=True)),
                ('console_coordinates', models.CharField(blank=True, max_length=45, null=True)),
                ('cs_signal', models.IntegerField(blank=True, null=True)),
                ('dv_flag', models.IntegerField()),
                ('bootup', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'console',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConsoleAssociation',
            fields=[
                ('cs_ascid', models.AutoField(primary_key=True, serialize=False)),
                ('association_id', models.CharField(max_length=60)),
                ('sales_date', models.DateField(blank=True, null=True)),
                ('sales_time', models.TimeField()),
            ],
            options={
                'db_table': 'Console_Asociation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Customers',
            fields=[
                ('customer_id', models.AutoField(primary_key=True, serialize=False)),
                ('customer_name', models.CharField(max_length=60)),
                ('customer_email', models.CharField(max_length=70)),
                ('customer_address', models.CharField(max_length=80)),
                ('customer_city', models.CharField(max_length=60)),
                ('customer_zip', models.IntegerField()),
                ('customer_country', models.CharField(max_length=60)),
                ('customer_phone', models.IntegerField()),
                ('blocked_sites', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'db_table': 'Customers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeliveryHistoric',
            fields=[
                ('delivery_id', models.AutoField(primary_key=True, serialize=False)),
                ('uid', models.IntegerField()),
                ('transaction_date', models.DateField()),
                ('transaction_time', models.TimeField()),
                ('transaction_date_utc0', models.DateField(blank=True, null=True)),
                ('transaction_time_utc0', models.TimeField(blank=True, null=True)),
                ('tank_id', models.IntegerField()),
                ('current_volume', models.DecimalField(decimal_places=0, max_digits=10)),
                ('delivery', models.IntegerField()),
                ('mcs_transaction_id', models.IntegerField(blank=True, null=True)),
                ('site_name', models.CharField(blank=True, max_length=45, null=True)),
                ('site_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'delivery_historic',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DipreadHistoric',
            fields=[
                ('dipread_id', models.AutoField(primary_key=True, serialize=False)),
                ('uid', models.IntegerField()),
                ('transaction_date', models.DateField()),
                ('transaction_time', models.TimeField()),
                ('tank_id', models.IntegerField()),
                ('current_volume', models.DecimalField(decimal_places=2, max_digits=10)),
                ('ullage', models.DecimalField(decimal_places=2, max_digits=10)),
                ('temperature', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('tc_volume', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('volume_height', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('water_volume', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('water_height', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('mcs_transaction_id', models.IntegerField(blank=True, null=True, unique=True)),
                ('site_name', models.CharField(blank=True, max_length=70, null=True)),
                ('site_id', models.IntegerField(blank=True, null=True)),
                ('transaction_date_utc0', models.DateField(blank=True, null=True)),
                ('transaction_time_utc0', models.TimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'dipread_historic',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Distributor',
            fields=[
                ('dist_id', models.AutoField(primary_key=True, serialize=False)),
                ('dist_name', models.CharField(max_length=60, unique=True)),
                ('dist_email', models.CharField(blank=True, max_length=60, null=True)),
                ('dist_address', models.CharField(blank=True, max_length=255, null=True)),
                ('dist_phone', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'Distributor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Drivers',
            fields=[
                ('driver_id', models.AutoField(primary_key=True, serialize=False)),
                ('customer_id', models.IntegerField()),
                ('first_name', models.CharField(max_length=30)),
                ('surname', models.CharField(blank=True, max_length=30, null=True)),
                ('driver_pinnumber', models.IntegerField()),
                ('driver_phone', models.IntegerField(blank=True, null=True)),
                ('external_id', models.CharField(blank=True, max_length=30, null=True)),
                ('license_number', models.CharField(blank=True, max_length=30, null=True)),
                ('license_expire', models.DateField(blank=True, null=True)),
                ('license_type', models.CharField(blank=True, max_length=30, null=True)),
                ('driver_email', models.CharField(blank=True, max_length=60, null=True)),
                ('driver_enabled', models.IntegerField()),
                ('driver_addinfo', models.CharField(blank=True, max_length=80, null=True)),
            ],
            options={
                'db_table': 'drivers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FuelQuality',
            fields=[
                ('if_fq', models.AutoField(primary_key=True, serialize=False)),
                ('client_id', models.IntegerField(blank=True, null=True)),
                ('uid', models.IntegerField(blank=True, null=True)),
                ('tank_id', models.IntegerField(blank=True, null=True)),
                ('fq_timestamp', models.CharField(blank=True, max_length=45, null=True)),
                ('particle_4um', models.IntegerField(blank=True, null=True)),
                ('particle_6um', models.IntegerField(blank=True, null=True)),
                ('particle_14um', models.IntegerField(blank=True, null=True)),
                ('particle_21um', models.IntegerField(blank=True, null=True)),
                ('fq_date0', models.DateField(blank=True, null=True)),
                ('fq_time0', models.TimeField(blank=True, null=True)),
                ('fq_date', models.DateField(blank=True, null=True)),
                ('fq_time', models.TimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fuel_quality',
                'db_table_comment': '\t\t\t',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Login',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=60, unique=True)),
                ('password', models.CharField(max_length=60)),
                ('name', models.CharField(max_length=60)),
                ('last_name', models.CharField(max_length=60)),
                ('active', models.IntegerField()),
                ('last_date', models.DateField(blank=True, null=True)),
                ('last_time', models.TimeField(blank=True, null=True)),
                ('token', models.CharField(blank=True, max_length=256, null=True)),
                ('token_expiry', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'login',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Messages',
            fields=[
                ('message_id', models.AutoField(primary_key=True, serialize=False)),
                ('message_lang', models.IntegerField()),
                ('message_type', models.IntegerField()),
                ('message_content', models.CharField(max_length=160)),
            ],
            options={
                'db_table': 'messages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MyapiExamplemodel',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'myapi_examplemodel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NewTable',
            fields=[
                ('id_fq', models.IntegerField(primary_key=True, serialize=False)),
                ('client_id', models.IntegerField(blank=True, null=True)),
                ('uid', models.IntegerField(blank=True, null=True)),
                ('tank_id', models.IntegerField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('time', models.TimeField(blank=True, null=True)),
                ('number_4', models.IntegerField(blank=True, db_column='4', null=True)),
                ('number_6', models.IntegerField(blank=True, db_column='6', null=True)),
                ('number_14', models.IntegerField(blank=True, db_column='14', null=True)),
                ('number_21', models.IntegerField(blank=True, db_column='21', null=True)),
            ],
            options={
                'db_table': 'new_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('product_id', models.IntegerField(primary_key=True, serialize=False)),
                ('product_name', models.CharField(max_length=60)),
                ('product_colour', models.CharField(max_length=60)),
                ('product_density', models.FloatField()),
                ('product_cte', models.FloatField(blank=True, null=True)),
                ('product_basetemp', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'products',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pumps',
            fields=[
                ('pump_id', models.AutoField(primary_key=True, serialize=False)),
                ('tank_id', models.IntegerField()),
                ('nozzle_number', models.IntegerField(blank=True, db_column='Nozzle_Number', null=True)),
                ('nozzle_walk_time', models.IntegerField(blank=True, db_column='Nozzle_Walk_Time', null=True)),
                ('nozzle_auth_time', models.IntegerField(blank=True, db_column='Nozzle_Auth_Time', null=True)),
                ('nozzle_max_run_time', models.IntegerField(blank=True, db_column='Nozzle_Max_Run_Time', null=True)),
                ('nozzle_no_flow', models.IntegerField(blank=True, db_column='Nozzle_No_Flow', null=True)),
                ('nozzle_product', models.CharField(blank=True, db_column='Nozzle_Product', max_length=255, null=True)),
                ('pulse_rate', models.DecimalField(blank=True, db_column='Pulse_Rate', decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'pumps',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReportCron',
            fields=[
                ('idreport_cron', models.AutoField(primary_key=True, serialize=False)),
                ('group_id', models.IntegerField(blank=True, null=True)),
                ('email_list', models.CharField(blank=True, max_length=1000, null=True)),
                ('start_time', models.IntegerField(blank=True, null=True)),
                ('finish_time', models.IntegerField(blank=True, null=True)),
                ('cron', models.CharField(blank=True, max_length=45, null=True)),
                ('report_interval', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'report_cron',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reseller',
            fields=[
                ('reseller_id', models.AutoField(primary_key=True, serialize=False)),
                ('reseller_name', models.CharField(max_length=60)),
                ('reseller_email', models.CharField(max_length=70)),
                ('reseller_address', models.CharField(blank=True, max_length=70, null=True)),
                ('reseller_phone', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'Reseller',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SiteGroups',
            fields=[
                ('group_id', models.AutoField(primary_key=True, serialize=False)),
                ('client_id', models.IntegerField()),
                ('group_name', models.CharField(max_length=60)),
            ],
            options={
                'db_table': 'site_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sites',
            fields=[
                ('site_id', models.AutoField(db_column='Site_id', primary_key=True, serialize=False)),
                ('site_name', models.CharField(blank=True, db_column='Site_name', max_length=60, null=True)),
                ('site_info', models.CharField(blank=True, db_column='Site_Info', max_length=255, null=True)),
                ('last_date', models.DateField(blank=True, null=True)),
                ('last_time', models.TimeField(blank=True, null=True)),
                ('site_country', models.CharField(blank=True, max_length=60, null=True)),
                ('site_address', models.CharField(blank=True, max_length=60, null=True)),
                ('site_city', models.CharField(blank=True, max_length=60, null=True)),
                ('postcode', models.IntegerField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=10, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=60, null=True)),
                ('mcs_id', models.IntegerField(blank=True, null=True)),
                ('site_status', models.CharField(blank=True, max_length=45, null=True)),
                ('time_zone', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'Sites',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StockNoti',
            fields=[
                ('noti_id', models.AutoField(primary_key=True, serialize=False)),
                ('client_id', models.IntegerField()),
                ('email', models.CharField(max_length=60)),
                ('cron', models.IntegerField()),
                ('notification_type', models.IntegerField()),
                ('start_time', models.IntegerField()),
                ('finish_time', models.IntegerField()),
                ('interval_time', models.IntegerField()),
                ('active', models.IntegerField()),
            ],
            options={
                'db_table': 'stock_noti',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StrappingChart',
            fields=[
                ('chart_id', models.AutoField(primary_key=True, serialize=False)),
                ('client_id', models.IntegerField()),
                ('chart_name', models.CharField(max_length=60)),
                ('json_data', models.TextField(blank=True, db_collation='utf8mb4_general_ci', null=True)),
            ],
            options={
                'db_table': 'strapping_chart',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TankgaugeType',
            fields=[
                ('tank_gauge_id', models.IntegerField(primary_key=True, serialize=False)),
                ('device_name', models.CharField(max_length=60)),
            ],
            options={
                'db_table': 'tankgauge_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tanks',
            fields=[
                ('tank_uid', models.AutoField(primary_key=True, serialize=False)),
                ('tank_id', models.IntegerField()),
                ('site_id', models.IntegerField(db_column='Site_id')),
                ('tank_name', models.CharField(blank=True, db_column='Tank_name', max_length=60, null=True)),
                ('dipr_date0', models.DateField(blank=True, null=True)),
                ('dipr_time0', models.TimeField(blank=True, null=True)),
                ('dipr_date', models.DateField(blank=True, null=True)),
                ('dipr_time', models.TimeField(blank=True, null=True)),
                ('product_id', models.IntegerField()),
                ('capacity', models.IntegerField()),
                ('current_volume', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('ullage', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('current_percent', models.FloatField(blank=True, null=True)),
                ('tank_gauge_type', models.IntegerField()),
                ('tank_gauge_uart', models.IntegerField(blank=True, null=True)),
                ('tank_gauge_id', models.IntegerField(blank=True, null=True)),
                ('chart_id', models.IntegerField(blank=True, null=True)),
                ('fms_type', models.IntegerField()),
                ('fms_uart', models.IntegerField(blank=True, null=True)),
                ('fms_id', models.IntegerField(blank=True, null=True)),
                ('relay_type', models.IntegerField()),
                ('relay_uart', models.IntegerField(blank=True, null=True)),
                ('volume_height', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('water_volume', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('water_height', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('temperature', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('tc_volume', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('alert_type', models.IntegerField(blank=True, null=True)),
                ('level_alert', models.IntegerField(blank=True, null=True)),
                ('alert_flag', models.IntegerField()),
                ('offset_tank', models.IntegerField(blank=True, null=True)),
                ('offset_flag', models.IntegerField()),
                ('recon_time', models.TimeField()),
            ],
            options={
                'db_table': 'Tanks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Timezones',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_zone', models.CharField(blank=True, max_length=255, null=True)),
                ('example_city', models.CharField(blank=True, max_length=255, null=True)),
                ('utc_offset', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'timezones',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TransactionDuplicates',
            fields=[
                ('transaction_id', models.AutoField(primary_key=True, serialize=False)),
                ('uid', models.IntegerField()),
                ('piusi_transaction_id', models.IntegerField(blank=True, null=True)),
                ('piusi_id', models.IntegerField(blank=True, null=True)),
                ('transaction_date', models.DateField()),
                ('transaction_time', models.TimeField()),
                ('transaction_date_utc0', models.DateField(blank=True, null=True)),
                ('transaction_time_utc0', models.TimeField(blank=True, null=True)),
                ('card_number', models.IntegerField(blank=True, null=True)),
                ('card_holder_name', models.CharField(blank=True, max_length=60, null=True)),
                ('customer_name', models.CharField(blank=True, max_length=60, null=True)),
                ('odometer', models.IntegerField(blank=True, null=True)),
                ('registration', models.CharField(blank=True, max_length=11, null=True)),
                ('tank_id', models.IntegerField()),
                ('tank_name', models.CharField(blank=True, max_length=65, null=True)),
                ('site_id', models.IntegerField(blank=True, null=True)),
                ('pump_id', models.IntegerField()),
                ('dispensed_volume', models.FloatField()),
                ('actions', models.CharField(max_length=20)),
                ('product', models.CharField(blank=True, max_length=45, null=True)),
                ('mcs_transaction_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'transaction_duplicates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserAcceslevel',
            fields=[
                ('access_level', models.IntegerField(primary_key=True, serialize=False)),
                ('user_type', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'User_acceslevel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Vehicles',
            fields=[
                ('vehicle_id', models.AutoField(primary_key=True, serialize=False)),
                ('vehicle_assistnumber', models.CharField(max_length=30)),
                ('odometer_type', models.IntegerField()),
                ('allowed_products', models.CharField(max_length=150)),
                ('odometer_prompt', models.IntegerField()),
                ('last_odometer', models.IntegerField()),
                ('vehicle_brand', models.CharField(max_length=30)),
                ('vehicle_model', models.CharField(max_length=30)),
                ('vehicle_type', models.CharField(max_length=30)),
                ('vehicle_tanksize', models.IntegerField()),
                ('vehicle_rego', models.CharField(max_length=30)),
                ('vehicle_rego_date', models.DateField()),
                ('vehicle_service', models.DateField()),
                ('vehicle_service_km', models.IntegerField()),
                ('vehicle_addinfo', models.CharField(max_length=80)),
                ('requires_service', models.IntegerField()),
                ('vehicle_enabled', models.IntegerField()),
            ],
            options={
                'db_table': 'vehicles',
                'managed': False,
            },
        ),
    ]
